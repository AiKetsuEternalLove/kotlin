<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude" version="2" url="http://kotlinlang.org" allow-bundled-update="true">
  <id>org.jetbrains.kotlin</id>

  <name>Kotlin FIR</name>
  <description><![CDATA[
The Kotlin FIR plugin provides language support in IntelliJ IDEA and Android Studio.
<br>
<a href="http://kotlinlang.org/docs/tutorials/getting-started.html">Getting Started in IntelliJ IDEA</a><br>
<a href="http://kotlinlang.org/docs/tutorials/kotlin-android.html">Getting Started in Android Studio</a><br>
<a href="http://slack.kotlinlang.org/">Public Slack</a><br>
<a href="https://youtrack.jetbrains.com/issues/KT">Issue tracker</a><br>
]]></description>
  <version>@snapshot@</version>
  <vendor url="http://www.jetbrains.com">JetBrains</vendor>

  <idea-version since-build="193.4099.13" until-build="193.*"/>

  <depends>com.intellij.modules.platform</depends>

  <depends optional="true" config-file="junit.xml">JUnit</depends>
  <depends optional="true" config-file="gradle.xml">com.intellij.gradle</depends>
  <depends optional="true" config-file="gradle-java.xml">org.jetbrains.plugins.gradle</depends>
  <depends optional="true" config-file="kotlin-gradle-testing.xml">org.jetbrains.plugins.gradle</depends>
  <depends optional="true" config-file="gradle-groovy.xml">org.intellij.groovy</depends>
  <depends optional="true" config-file="maven-common.xml">org.jetbrains.idea.maven</depends>
  <depends optional="true" config-file="maven.xml">org.jetbrains.idea.maven</depends>
  <depends optional="true" config-file="testng-j.xml">TestNG-J</depends>
  <depends optional="true" config-file="coverage.xml">Coverage</depends>
  <depends optional="true" config-file="decompiler.xml">org.jetbrains.java.decompiler</depends>
  <depends optional="true" config-file="git4idea.xml">Git4Idea</depends>
  <depends optional="true" config-file="stream-debugger.xml">org.jetbrains.debugger.streams</depends>
  <depends optional="true" config-file="completion-stats.xml">com.intellij.stats.completion</depends>

  <!-- ULTIMATE-PLUGIN-PLACEHOLDER -->

  <!-- CIDR-PLUGIN-PLACEHOLDER-START -->
  <depends>com.intellij.modules.idea</depends>
  <depends>com.intellij.modules.java</depends>
  <depends optional="true" config-file="kotlin-copyright.xml">com.intellij.copyright</depends>
  <depends optional="true" config-file="injection.xml">org.intellij.intelliLang</depends>
  <!-- CIDR-PLUGIN-PLACEHOLDER-END -->

  <xi:include href="indexes.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="templates.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="editor.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="idea.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="configuration.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <!-- CIDR-PLUGIN-EXCLUDE-START -->
  <!-- CIDR-PLUGIN-EXCLUDE-END -->

  <xi:include href="tipsAndTricks.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <xi:include href="extensions/ide.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <project-components>
    <component>
      <implementation-class>org.jetbrains.kotlin.idea.caches.trackers.KotlinCodeBlockModificationListener</implementation-class>
    </component>
  </project-components>

  <extensionPoints>
    <xi:include href="extensions/compiler.xml" xpointer="xpointer(/idea-plugin/extensionPoints/*)"/>

    <extensionPoint qualifiedName="org.jetbrains.kotlin.pluginUpdateVerifier"
                    interface="org.jetbrains.kotlin.idea.update.PluginUpdateVerifier"/>
  </extensionPoints>

  <extensions defaultExtensionNs="org.jetbrains.kotlin">
    <idePlatformKindResolution implementation="org.jetbrains.kotlin.caches.resolve.JvmPlatformKindResolution"/>
    <idePlatformKindResolution implementation="org.jetbrains.kotlin.caches.resolve.JsPlatformKindResolution"/>
    <idePlatformKindResolution implementation="org.jetbrains.kotlin.caches.resolve.CommonPlatformKindResolution"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <projectService serviceImplementation="org.jetbrains.kotlin.resolve.jvm.KotlinJavaPsiFacade"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.idea.caches.project.LibraryModificationTracker"/>

    <applicationService
        serviceInterface="org.jetbrains.kotlin.platform.DefaultIdeTargetPlatformKindProvider"
        serviceImplementation="org.jetbrains.kotlin.platform.impl.IdeaDefaultIdeTargetPlatformKindProvider"/>

    <projectService serviceInterface="org.jetbrains.kotlin.idea.framework.LibraryEffectiveKindProvider"
                    serviceImplementation="org.jetbrains.kotlin.idea.framework.LibraryEffectiveKindProviderImpl"/>

    <applicationService serviceInterface="org.jetbrains.kotlin.psi.KotlinReferenceProvidersService"
                        serviceImplementation="org.jetbrains.kotlin.idea.references.KtIdeReferenceProviderService"/>

    <applicationService serviceInterface="org.jetbrains.kotlin.idea.references.KotlinReferenceProviderContributor"
                        serviceImplementation="org.jetbrains.kotlin.idea.references.KotlinFirReferenceContributor"/>

    <projectService serviceInterface="org.jetbrains.kotlin.idea.fir.FirIdeResolveStateService"
                    serviceImplementation="org.jetbrains.kotlin.idea.fir.FirIdeResolveStateServiceImpl"/>

    <!--  - - -  -->

    <applicationService serviceImplementation="org.jetbrains.kotlin.idea.PluginStartupService"/>

    <postStartupActivity implementation="org.jetbrains.kotlin.idea.PluginStartupActivity"/>
    <postStartupActivity implementation="org.jetbrains.kotlin.idea.versions.KotlinUpdatePluginStartupActivity"/>

    <postStartupActivity implementation="org.jetbrains.kotlin.idea.configuration.KotlinMigrationProjectComponent"/>

    <projectService serviceImplementation="org.jetbrains.kotlin.idea.completion.LookupCancelService"/>
    <projectService serviceImplementation="org.jetbrains.kotlin.idea.configuration.KotlinMigrationProjectService"/>

    <highlightingPassFactory implementation="org.jetbrains.kotlin.idea.highlighter.KotlinBeforeResolveHighlightingPass$Registrar"/>

    <defaultLiveTemplatesProvider implementation="org.jetbrains.kotlin.idea.liveTemplates.KotlinLiveTemplatesProvider"/>

    <fileType name="Kotlin"
              implementationClass="org.jetbrains.kotlin.idea.KotlinFileType"
              fieldName="INSTANCE"
              language="kotlin"
              extensions="kt;kts"/>
  </extensions>
</idea-plugin>
